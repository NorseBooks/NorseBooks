# Action name
name: Run tests and compile coverage reports and documentation

# When the action will run
on:
  push: # On dev branch push
    branches: [main, dev]
  pull_request: # On dev branch pull request
    branches: [main, dev]

  # Allows the workflow to be run manually from the Actions tab
  workflow_dispatch:

# Jobs that can be run
jobs:
  # The test job
  test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Sequence of steps to be executed
    steps:
      # Clones the repository under $GITHUB_WORKSPACE so the job can access it
      - name: Clone the repo and checkout the dev branch
        uses: actions/checkout@v2

      # Use Node.js
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '14.17.4'

      # Run the tests
      - name: Run tests
        env:
          TEST_DATABASE_URL: ${{ secrets.TEST_DATABASE_URL }}
        run: |
          printf "HEROKU_POSTGRESQL_SILVER_URL=${TEST_DATABASE_URL}\nTESTING=1\n" > .env  # Generate the .env file
          npm install                                                                     # Install NPM packages
          npm run test                                                                    # Run tests and generate coverage data

      # Generate documentation and coverage report
      - name: Generate documentation and coverage report
        env:
          BOT_AUTH: ${{ secrets.BOT_AUTH }}
          BOT_EMAIL: ${{ secrets.BOT_EMAIL }}
          BOT_USER: ${{ secrets.BOT_USER }}
        run: |
          # Generate documentation
          npm run document

          # Authenticate the bot
          git config --global user.email "$BOT_EMAIL"
          git config --global user.name "$BOT_USER"

          # Clone the repo and update the docs
          git clone "https://github.com/NorseBooks/docs.git"
          mv documentation docs
          cd docs
          rm -rf docs
          mv documentation docs
          cd docs

          # Include coverage numbers
          cp -R ../../coverage .

          # Add, commit, and push
          git add .

          # Exit with code 0 as no new additions means exit code 1
          git commit -m "Update docs" || exit 0
          git push "https://$BOT_AUTH@github.com/NorseBooks/docs.git"

          # Clone the coverage repo and update the coverage report
          cd ../..
          git clone "https://github.com/NorseBooks/coverage.git" cvg
          cd cvg
          cp -r ../coverage/lcov-report/* .
          cp ../coverage/lcov.info .
          git add .
          git commit -m "Update coverage" || exit 0
          git push "https://$BOT_AUTH@github.com/NorseBooks/coverage.git"
